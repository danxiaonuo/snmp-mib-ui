# Nginx 配置文件
# 监控系统反向代理和负载均衡配置

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # 日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    '$request_time $upstream_response_time';

    access_log /var/log/nginx/access.log main;

    # 基本配置
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;
    
    # Gzip 压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # 上游服务器配置
    upstream victoriametrics {
        server victoriametrics:8428 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream vmselect {
        server vmselect:8481 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream vminsert {
        server vminsert:8480 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream vmstorage {
        server vmstorage:8482 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream vmagent {
        server vmagent:8429 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream vmalert {
        server vmalert:8880 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream grafana {
        server grafana:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream alertmanager {
        server alertmanager:9093 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # 限流配置
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=grafana:10m rate=20r/s;

    # 主服务器配置
    server {
        listen 80;
        server_name localhost;
        
        # 安全头
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        
        # 根路径重定向到 Grafana
        location = / {
            return 301 /grafana/;
        }

        # Grafana 代理
        location /grafana/ {
            limit_req zone=grafana burst=50 nodelay;
            
            proxy_pass http://grafana/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket 支持
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # 超时配置
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # 缓冲配置
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
        }

        # VictoriaMetrics 单机版代理
        location /victoriametrics/ {
            limit_req zone=api burst=100 nodelay;
            
            rewrite ^/victoriametrics/(.*) /$1 break;
            proxy_pass http://victoriametrics;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # VMSelect 代理（集群模式查询）
        location /vmselect/ {
            limit_req zone=api burst=100 nodelay;
            
            rewrite ^/vmselect/(.*) /$1 break;
            proxy_pass http://vmselect;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # VMInsert 代理（集群模式写入）
        location /vminsert/ {
            limit_req zone=api burst=200 nodelay;
            
            rewrite ^/vminsert/(.*) /$1 break;
            proxy_pass http://vminsert;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;
        }

        # VMAgent 代理
        location /vmagent/ {
            limit_req zone=api burst=50 nodelay;
            
            rewrite ^/vmagent/(.*) /$1 break;
            proxy_pass http://vmagent;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # VMAlert 代理
        location /vmalert/ {
            limit_req zone=api burst=30 nodelay;
            
            rewrite ^/vmalert/(.*) /$1 break;
            proxy_pass http://vmalert;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Alertmanager 代理
        location /alertmanager/ {
            limit_req zone=api burst=30 nodelay;
            
            rewrite ^/alertmanager/(.*) /$1 break;
            proxy_pass http://alertmanager;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # 健康检查端点
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Nginx 状态页面
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            allow 10.0.0.0/8;
            deny all;
        }

        # 静态文件缓存
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
        }

        # 安全配置 - 隐藏敏感路径
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # 错误页面
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # HTTPS 配置（可选）
    # server {
    #     listen 443 ssl http2;
    #     server_name localhost;
    #     
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     
    #     # HSTS
    #     add_header Strict-Transport-Security "max-age=63072000" always;
    #     
    #     # 其他配置与 HTTP 相同
    # }

    # 监控指标收集服务器（内部使用）
    server {
        listen 8080;
        server_name localhost;
        
        # 只允许内部网络访问
        allow 127.0.0.1;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        allow 10.0.0.0/8;
        deny all;
        
        # Prometheus 指标端点
        location /metrics {
            access_log off;
            return 200 "# Nginx metrics endpoint\n";
            add_header Content-Type text/plain;
        }
        
        # 详细状态信息
        location /status {
            stub_status on;
            access_log off;
        }
    }
}