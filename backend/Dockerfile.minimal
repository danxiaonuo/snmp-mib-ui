# 最小化本地构建Dockerfile - 使用最少的网络下载
FROM alpine:latest

# 设置时区和环境变量（这些不需要网络）
ENV TZ=Asia/Shanghai \
    ENVIRONMENT=production \
    PORT=8080 \
    GIN_MODE=release

# 一次性安装所有运行时依赖（减少网络请求）
RUN apk add --no-cache ca-certificates tzdata curl wget bash \
    && addgroup -g 1001 -S appgroup \
    && adduser -u 1001 -S appuser -G appgroup \
    && mkdir -p /app/uploads /app/mibs /var/log/mibweb \
    && chown -R appuser:appgroup /app /var/log/mibweb \
    && rm -rf /var/cache/apk/*

WORKDIR /app

# 只复制已构建的二进制文件（最关键的优化）
COPY --chown=appuser:appgroup mib-platform ./main

# 复制配置文件（如果存在）
COPY --chown=appuser:appgroup config/ ./config/ 2>/dev/null || true
COPY --chown=appuser:appgroup migrations/ ./migrations/ 2>/dev/null || true

# 设置权限
RUN chmod +x ./main

# 切换用户
USER appuser

# 暴露端口
EXPOSE 8080

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:8080/health || exit 1

# 启动应用
CMD ["./main"]